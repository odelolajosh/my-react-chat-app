{"version":3,"sources":["helpers/AuthHelper.js","components/PrivateRoute.js","components/PublicRoute.js","helpers/ChatSocketServer.js","res/icon.js","services/user/actions.js","services/user/actionTypes.js","helpers/ErrorHandler.js","helpers/ChatHttpServer.js","hooks/usePromise.js","components/spinner/Spinner.js","components/chatlist/ChatList.js","components/spinner/index.js","components/scroll-comp/ScrollContainer.js","helpers/SoundHelper.js","pages/chat/ChatRoom.js","helpers/dateHelper.js","components/error/index.js","pages/Home.js","pages/join/Join.js","contexts/themeContext.js","pages/signuser/Login.js","pages/signuser/Signup.js","pages/notfound/NotFound.js","App.js","serviceWorker.js","services/user/reducer.js","services/store.js","index.js","res/logo.svg","res/choiceSelect.svg","res/startConversation.svg","res/sound/doneforyou.mp3"],"names":["USER_TOKEN_KEY","USER_ID_KEY","getAuthValue","token","window","localStorage","getItem","userId","isAuthenticated","Boolean","authenticate","callback","setItem","unauthenticate","clear","PrivateRoute","Component","component","rest","render","props","AuthHelper","to","pathname","state","from","location","PublicRoute","events","require","socket","eventEmitter","EventEmitter","this","io","connect","query","error","Error","emit","message","on","data","toUserId","console","log","plane","xmlns","viewBox","d","users","emoji","bars","times","search","loginSuccess","payload","type","loginFailed","FAILED_TO_FETCH","AN_ERROR_OCCURRED","POOR_INTERNET_CONNECTION","UNAUTHENTICATED_USER","USER_NOT_FOUND","checkErrorBool","err","normalizeError","response","status","toLowerCase","BASE_URL","REQUEST_OPTIONS","method","mode","headers","getUserRequest","fetch","loginRequest","body","JSON","stringify","signupRequest","checkTokenRequest","getMessageRequest","page","limit","loginUser","dispatch","a","ok","json","userData","ErrorHandler","getResponseError","getErrorRemark","signupUser","logoutUser","checkToken","getUserDetails","Promise","resolve","reject","user","getMessages","usePromise","Spinner","className","ChatListItem","isSelected","setSelectedUser","isTyping","onClick","online","imageUrl","src","alt","username","ChatList","searchKey","e","setState","searchTerm","target","value","renderChatList","chatListResponse","chatListUsers","singleUser","length","filter","_id","chatList","userDisconnected","loggedOutUser","findIndex","obj","selectedUserId","ChatSocketServer","getChatList","removeListener","updateSelectedUser","isMobileViewPort","toggleValue","ref","sidebarRef","trim","placeholder","onChange","includes","map","index","key","typing","loading","auth","SpinnerFullPage","ScrollContainer","addScrollEvent","scrollBoxRef","addEventListener","_","throttle","handleScrolling","document","parseInt","scrollTop","offsetPercent","loadingOffset","onScrollPageRequest","warn","prevState","currentHeight","contentBoxRef","getBoundingClientRect","height","scrollTo","boxHeight","loadingRef","React","createRef","paddingTop","onScrollBoxMount","el","style","top","contentClassName","children","SoundHelper","asset","volume","validateUrl","play","Audio","then","catch","ChatRoom","receiveSocketMessages","socketResponse","selectedUser","fromUserId","messages","scrollMessageContainer","notifySound","ChatHttpServer","result","alert","currentPage","totalPages","messageLoading","sendMessage","undefined","sendAndUpdateMessages","text","typingMessage","scrollBox","contextBox","messagesBox","messageContentBox","handleScrollPageRequest","handleScrollPageResult","renderMessages","dayInConcern","Date","date","d1","d2","day","isNewDay","getFullYear","getMonth","getDate","getTime","Fragment","toDateString","isAuth","renderChatUI","role","renderStartChatUI","onScrollPageResponse","onKeyPress","renderNoUserSelectedUI","noUserSelected","startConversation","soundFile","prevProps","receiveMessage","setTimeout","scrollHeight","nextProps","ChatBox","ReactEmoji","emojify","ErrorFullPage","onAction","Home","createSocketConnection","isLoading","receiveTypingMessage","addTypingUser","handleViewPortResize","innerWidth","removeEventListener","handleCloseSidebar","switchToggleValue","newValue","sidebarElem","current","contains","clearTimeout","newTyping","typingTimeout","errorAction","checkUserToken","responsiveKit","switchToggle","logo","Join","useState","name","setName","room","setRoom","joined","setJoined","id","onSubmit","preventDefault","aria-label","disabled","createContext","Consumer","Provider","ThemeContextProvider","USER_THEME_PREFERENCE","theme","toggleTheme","getDerivedStateFromProps","ThemeContext","Login","password","setPassword","useDispatch","useSelector","login","Signup","email","setEmail","signup","NotFound","history","back","App","basename","process","path","exact","hostname","match","defaultState","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.445c9624.chunk.js","sourcesContent":["\r\nclass AuthHelper {\r\n    USER_TOKEN_KEY = \"user_token_key\";\r\n    USER_ID_KEY = \"user_id_key\";\r\n    \r\n    getAuthValue = () => ({\r\n        token: window.localStorage.getItem(this.USER_TOKEN_KEY),\r\n        userId: window.localStorage.getItem(this.USER_ID_KEY)\r\n    });\r\n    isAuthenticated = () => Boolean(window.localStorage.getItem(this.USER_TOKEN_KEY));\r\n    authenticate = (userId, token, callback) => {\r\n        window.localStorage.setItem(this.USER_TOKEN_KEY, token)\r\n        window.localStorage.setItem(this.USER_ID_KEY, userId)\r\n        if (callback && typeof callback === \"function\")\r\n            return callback()\r\n    };\r\n    unauthenticate = (callback) => {\r\n        window.localStorage.clear();\r\n        if (callback && typeof callback === \"function\")\r\n            callback()\r\n    };\r\n}\r\n\r\nexport default new AuthHelper();","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport AuthHelper from '../helpers/AuthHelper';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => AuthHelper.isAuthenticated() === true \r\n                ? <Component { ...props }/> \r\n                : <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} /> }\r\n         />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'; \r\nimport AuthHelper from '../helpers/AuthHelper';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => AuthHelper.isAuthenticated() === false \r\n                ? <Component { ...props } /> \r\n                : <Redirect to=\"/chat\" /> }\r\n         />\r\n    )\r\n}\r\n\r\nexport default PublicRoute;","import io from 'socket.io-client'\r\nconst events = require('events');\r\n\r\nclass ChatSocketServer {\r\n    socket = null;\r\n    eventEmitter = new events.EventEmitter();\r\n\r\n    // connecting to Socket server\r\n    createSocketConnection(userId) {\r\n        // io.connect('http://localhost:4001', { query: `userId=${userId}` })\r\n        try {\r\n            this.socket = io.connect(' https://my-chat-app-server-0707.herokuapp.com', { query: `userId=${userId}` })\r\n        } catch(error) {\r\n            throw new Error('Something went wrong. We can\\'t connect to server')\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getChatList(userId) {\r\n        this.socket.emit('chat-list', { userId }, ({ error, message }) => {\r\n            if (error) {\r\n                this.eventEmitter.emit('chat-list-response', { error, message });\r\n            }\r\n        });\r\n        this.socket.on('chat-list-response', (data) => {\r\n            this.eventEmitter.emit('chat-list-response', data);\r\n        })\r\n    }\r\n\r\n    sendMessage(message) {\r\n        this.socket.emit('add-message', message)\r\n    }\r\n\r\n    receiveMessage() {\r\n        this.socket.on('add-message-response', (data) => {\r\n            this.eventEmitter.emit('add-message-response', data);\r\n        })\r\n    }\r\n\r\n    typingMessage(toUserId) {\r\n        this.socket.emit('typing-message', { toUserId }, ({ error, message }) => {\r\n            console.log(\"error\", message);\r\n        });\r\n    }\r\n\r\n    receiveTypingMessage() {\r\n        this.socket.on('typing-message-response', (data) => {\r\n            this.eventEmitter.emit('typing-message-response', data);\r\n        })\r\n    }\r\n}\r\n\r\nexport default new ChatSocketServer();","import React from 'react';\r\nimport './icon.css';\r\n\r\nexport const user = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 16 5 C 12.144531 5 9 8.144531 9 12 C 9 14.410156 10.230469 16.550781 12.09375 17.8125 C 8.527344 19.34375 6 22.882813 6 27 L 8 27 C 8 22.570313 11.570313 19 16 19 C 20.429688 19 24 22.570313 24 27 L 26 27 C 26 22.882813 23.472656 19.34375 19.90625 17.8125 C 21.769531 16.550781 23 14.410156 23 12 C 23 8.144531 19.855469 5 16 5 Z M 16 7 C 18.773438 7 21 9.226563 21 12 C 21 14.773438 18.773438 17 16 17 C 13.226563 17 11 14.773438 11 12 C 11 9.226563 13.226563 7 16 7 Z\"/></svg>;\r\nexport const cog = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 13.1875 3 L 13.03125 3.8125 L 12.4375 6.78125 C 11.484375 7.15625 10.625 7.683594 9.84375 8.3125 L 6.9375 7.3125 L 6.15625 7.0625 L 5.75 7.78125 L 3.75 11.21875 L 3.34375 11.9375 L 3.9375 12.46875 L 6.1875 14.4375 C 6.105469 14.949219 6 15.460938 6 16 C 6 16.539063 6.105469 17.050781 6.1875 17.5625 L 3.9375 19.53125 L 3.34375 20.0625 L 3.75 20.78125 L 5.75 24.21875 L 6.15625 24.9375 L 6.9375 24.6875 L 9.84375 23.6875 C 10.625 24.316406 11.484375 24.84375 12.4375 25.21875 L 13.03125 28.1875 L 13.1875 29 L 18.8125 29 L 18.96875 28.1875 L 19.5625 25.21875 C 20.515625 24.84375 21.375 24.316406 22.15625 23.6875 L 25.0625 24.6875 L 25.84375 24.9375 L 26.25 24.21875 L 28.25 20.78125 L 28.65625 20.0625 L 28.0625 19.53125 L 25.8125 17.5625 C 25.894531 17.050781 26 16.539063 26 16 C 26 15.460938 25.894531 14.949219 25.8125 14.4375 L 28.0625 12.46875 L 28.65625 11.9375 L 28.25 11.21875 L 26.25 7.78125 L 25.84375 7.0625 L 25.0625 7.3125 L 22.15625 8.3125 C 21.375 7.683594 20.515625 7.15625 19.5625 6.78125 L 18.96875 3.8125 L 18.8125 3 Z M 14.8125 5 L 17.1875 5 L 17.6875 7.59375 L 17.8125 8.1875 L 18.375 8.375 C 19.511719 8.730469 20.542969 9.332031 21.40625 10.125 L 21.84375 10.53125 L 22.40625 10.34375 L 24.9375 9.46875 L 26.125 11.5 L 24.125 13.28125 L 23.65625 13.65625 L 23.8125 14.25 C 23.941406 14.820313 24 15.402344 24 16 C 24 16.597656 23.941406 17.179688 23.8125 17.75 L 23.6875 18.34375 L 24.125 18.71875 L 26.125 20.5 L 24.9375 22.53125 L 22.40625 21.65625 L 21.84375 21.46875 L 21.40625 21.875 C 20.542969 22.667969 19.511719 23.269531 18.375 23.625 L 17.8125 23.8125 L 17.6875 24.40625 L 17.1875 27 L 14.8125 27 L 14.3125 24.40625 L 14.1875 23.8125 L 13.625 23.625 C 12.488281 23.269531 11.457031 22.667969 10.59375 21.875 L 10.15625 21.46875 L 9.59375 21.65625 L 7.0625 22.53125 L 5.875 20.5 L 7.875 18.71875 L 8.34375 18.34375 L 8.1875 17.75 C 8.058594 17.179688 8 16.597656 8 16 C 8 15.402344 8.058594 14.820313 8.1875 14.25 L 8.34375 13.65625 L 7.875 13.28125 L 5.875 11.5 L 7.0625 9.46875 L 9.59375 10.34375 L 10.15625 10.53125 L 10.59375 10.125 C 11.457031 9.332031 12.488281 8.730469 13.625 8.375 L 14.1875 8.1875 L 14.3125 7.59375 Z M 16 11 C 13.25 11 11 13.25 11 16 C 11 18.75 13.25 21 16 21 C 18.75 21 21 18.75 21 16 C 21 13.25 18.75 11 16 11 Z M 16 13 C 17.667969 13 19 14.332031 19 16 C 19 17.667969 17.667969 19 16 19 C 14.332031 19 13 17.667969 13 16 C 13 14.332031 14.332031 13 16 13 Z\"/></svg>;\r\nexport const userCircle = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 16 3 C 8.832031 3 3 8.832031 3 16 C 3 23.167969 8.832031 29 16 29 C 23.167969 29 29 23.167969 29 16 C 29 8.832031 23.167969 3 16 3 Z M 16 5 C 22.085938 5 27 9.914063 27 16 C 27 22.085938 22.085938 27 16 27 C 9.914063 27 5 22.085938 5 16 C 5 9.914063 9.914063 5 16 5 Z M 16 8 C 13.25 8 11 10.25 11 13 C 11 14.515625 11.707031 15.863281 12.78125 16.78125 C 10.53125 17.949219 9 20.300781 9 23 L 11 23 C 11 20.226563 13.226563 18 16 18 C 18.773438 18 21 20.226563 21 23 L 23 23 C 23 20.300781 21.46875 17.949219 19.21875 16.78125 C 20.292969 15.863281 21 14.515625 21 13 C 21 10.25 18.75 8 16 8 Z M 16 10 C 17.667969 10 19 11.332031 19 13 C 19 14.667969 17.667969 16 16 16 C 14.332031 16 13 14.667969 13 13 C 13 11.332031 14.332031 10 16 10 Z\"/></svg>;\r\nexport const userCog = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 16 5 C 12.1 5 9 8.1 9 12 C 9 14.4375 10.209961 16.561523 12.070312 17.8125 C 8.5100119 19.34733 6 22.893578 6 27 L 8 27 C 8 22.6 11.6 19 16 19 C 19.9 19 23 15.9 23 12 C 23 8.1 19.9 5 16 5 z M 16 7 C 18.8 7 21 9.2 21 12 C 21 14.8 18.8 17 16 17 C 13.2 17 11 14.8 11 12 C 11 9.2 13.2 7 16 7 z M 24.099609 18 L 24.099609 20.099609 C 23.499609 20.199609 22.900391 20.500781 22.400391 20.800781 L 20.900391 19.300781 L 19.5 20.699219 L 21 22.199219 C 20.6 22.699219 20.400781 23.3 20.300781 24 L 18 24 L 18 26 L 20.099609 26 C 20.199609 26.6 20.500781 27.200781 20.800781 27.800781 L 19.300781 29.300781 L 20.699219 30.699219 L 22.199219 29.199219 C 22.699219 29.499219 23.300391 29.800391 23.900391 29.900391 L 23.900391 32 L 25.900391 32 L 25.900391 29.900391 C 26.500391 29.800391 27.099609 29.499219 27.599609 29.199219 L 29.099609 30.699219 L 30.5 29.300781 L 29 27.800781 C 29.4 27.300781 29.599219 26.7 29.699219 26 L 32 26 L 32 24 L 29.900391 24 C 29.800391 23.4 29.499219 22.799219 29.199219 22.199219 L 30.699219 20.699219 L 29.300781 19.300781 L 27.800781 20.800781 C 27.300781 20.500781 26.699609 20.199609 26.099609 20.099609 L 26.099609 18 L 24.099609 18 z M 25 22 C 26.7 22 28 23.3 28 25 C 28 26.7 26.7 28 25 28 C 23.3 28 22 26.7 22 25 C 22 23.3 23.3 22 25 22 z M 25 24 C 24.875 24 24.75 24.03125 24.632812 24.085938 C 24.515625 24.140625 24.40625 24.21875 24.3125 24.3125 C 24.21875 24.40625 24.140625 24.515625 24.085938 24.632812 C 24.03125 24.75 24 24.875 24 25 C 24 25.375 24.28125 25.75 24.632812 25.914062 C 24.75 25.96875 24.875 26 25 26 C 25.5 26 26 25.5 26 25 C 26 24.5 25.5 24 25 24 z\"/></svg>;\r\nexport const plane = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 3.59375 5.34375 L 4.03125 7.21875 L 5.96875 16 L 4.03125 24.78125 L 3.59375 26.65625 L 5.375 25.9375 L 27.375 16.9375 L 29.65625 16 L 27.375 15.0625 L 5.375 6.0625 Z M 6.375 8.65625 L 21.90625 15 L 7.78125 15 Z M 7.78125 17 L 21.90625 17 L 6.375 23.34375 Z\"/></svg>;\r\nexport const users = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 11.5 6 C 9.578125 6 8 7.578125 8 9.5 C 8 11.421875 9.578125 13 11.5 13 C 13.421875 13 15 11.421875 15 9.5 C 15 7.578125 13.421875 6 11.5 6 Z M 20.5 6 C 18.578125 6 17 7.578125 17 9.5 C 17 11.421875 18.578125 13 20.5 13 C 22.421875 13 24 11.421875 24 9.5 C 24 7.578125 22.421875 6 20.5 6 Z M 11.5 8 C 12.339844 8 13 8.660156 13 9.5 C 13 10.339844 12.339844 11 11.5 11 C 10.660156 11 10 10.339844 10 9.5 C 10 8.660156 10.660156 8 11.5 8 Z M 20.5 8 C 21.339844 8 22 8.660156 22 9.5 C 22 10.339844 21.339844 11 20.5 11 C 19.660156 11 19 10.339844 19 9.5 C 19 8.660156 19.660156 8 20.5 8 Z M 7 12 C 4.800781 12 3 13.800781 3 16 C 3 17.113281 3.476563 18.117188 4.21875 18.84375 C 2.886719 19.746094 2 21.28125 2 23 L 4 23 C 4 21.332031 5.332031 20 7 20 C 8.667969 20 10 21.332031 10 23 L 12 23 C 12 21.28125 11.113281 19.746094 9.78125 18.84375 C 10.523438 18.117188 11 17.113281 11 16 C 11 13.800781 9.199219 12 7 12 Z M 12 23 C 11.375 23.835938 11 24.886719 11 26 L 13 26 C 13 24.332031 14.332031 23 16 23 C 17.667969 23 19 24.332031 19 26 L 21 26 C 21 24.886719 20.625 23.835938 20 23 C 19.660156 22.546875 19.25 22.160156 18.78125 21.84375 C 19.523438 21.117188 20 20.113281 20 19 C 20 16.800781 18.199219 15 16 15 C 13.800781 15 12 16.800781 12 19 C 12 20.113281 12.476563 21.117188 13.21875 21.84375 C 12.75 22.160156 12.339844 22.546875 12 23 Z M 20 23 L 22 23 C 22 21.332031 23.332031 20 25 20 C 26.667969 20 28 21.332031 28 23 L 30 23 C 30 21.28125 29.113281 19.746094 27.78125 18.84375 C 28.523438 18.117188 29 17.113281 29 16 C 29 13.800781 27.199219 12 25 12 C 22.800781 12 21 13.800781 21 16 C 21 17.113281 21.476563 18.117188 22.21875 18.84375 C 20.886719 19.746094 20 21.28125 20 23 Z M 7 14 C 8.117188 14 9 14.882813 9 16 C 9 17.117188 8.117188 18 7 18 C 5.882813 18 5 17.117188 5 16 C 5 14.882813 5.882813 14 7 14 Z M 25 14 C 26.117188 14 27 14.882813 27 16 C 27 17.117188 26.117188 18 25 18 C 23.882813 18 23 17.117188 23 16 C 23 14.882813 23.882813 14 25 14 Z M 16 17 C 17.117188 17 18 17.882813 18 19 C 18 20.117188 17.117188 21 16 21 C 14.882813 21 14 20.117188 14 19 C 14 17.882813 14.882813 17 16 17 Z\"/></svg>;\r\nexport const emoji = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 16 4 C 9.382813 4 4 9.382813 4 16 C 4 22.617188 9.382813 28 16 28 C 22.617188 28 28 22.617188 28 16 C 28 9.382813 22.617188 4 16 4 Z M 16 6 C 21.535156 6 26 10.464844 26 16 C 26 21.535156 21.535156 26 16 26 C 10.464844 26 6 21.535156 6 16 C 6 10.464844 10.464844 6 16 6 Z M 11.5 12 C 10.671875 12 10 12.671875 10 13.5 C 10 14.328125 10.671875 15 11.5 15 C 12.328125 15 13 14.328125 13 13.5 C 13 12.671875 12.328125 12 11.5 12 Z M 20.5 12 C 19.671875 12 19 12.671875 19 13.5 C 19 14.328125 19.671875 15 20.5 15 C 21.328125 15 22 14.328125 22 13.5 C 22 12.671875 21.328125 12 20.5 12 Z M 10.8125 19 L 9.09375 20 C 10.476563 22.386719 13.046875 24 16 24 C 18.953125 24 21.523438 22.386719 22.90625 20 L 21.1875 19 C 20.148438 20.792969 18.226563 22 16 22 C 13.773438 22 11.851563 20.792969 10.8125 19 Z\"/></svg>;\r\nexport const bars = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 4 7 L 4 9 L 28 9 L 28 7 Z M 4 15 L 4 17 L 28 17 L 28 15 Z M 4 23 L 4 25 L 28 25 L 28 23 Z\"/></svg>;\r\nexport const times = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 7.21875 5.78125 L 5.78125 7.21875 L 14.5625 16 L 5.78125 24.78125 L 7.21875 26.21875 L 16 17.4375 L 24.78125 26.21875 L 26.21875 24.78125 L 17.4375 16 L 26.21875 7.21875 L 24.78125 5.78125 L 16 14.5625 Z\"/></svg>;\r\nexport const search = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><path d=\"M 19 3 C 13.488281 3 9 7.488281 9 13 C 9 15.394531 9.839844 17.589844 11.25 19.3125 L 3.28125 27.28125 L 4.71875 28.71875 L 12.6875 20.75 C 14.410156 22.160156 16.605469 23 19 23 C 24.511719 23 29 18.511719 29 13 C 29 7.488281 24.511719 3 19 3 Z M 19 5 C 23.429688 5 27 8.570313 27 13 C 27 17.429688 23.429688 21 19 21 C 14.570313 21 11 17.429688 11 13 C 11 8.570313 14.570313 5 19 5 Z\"/></svg>;","import { LOGIN_USER_FAILED, LOGIN_USER_PENDING, LOGIN_USER_SUCCESS, LOGOUT_USER_PENDING, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILED } from \"./actionTypes\"\r\n\r\n\r\nexport const loginPending = () => ({ type: LOGIN_USER_PENDING });\r\nexport const loginSuccess = (payload) => ({ type: LOGIN_USER_SUCCESS, payload });\r\nexport const loginFailed = (payload) => ({ type: LOGIN_USER_FAILED, payload });\r\n\r\nexport const logoutPending = () => ({ type: LOGOUT_USER_PENDING });\r\nexport const logoutSuccess = () => ({ type: LOGOUT_USER_SUCCESS });\r\nexport const logoutFailed = (payload) => ({ type: LOGOUT_USER_FAILED, payload });","\r\n\r\nexport const LOGIN_USER_FAILED = \"login_user_failed\"\r\nexport const LOGIN_USER_PENDING = \"login_user_pending\"\r\nexport const LOGIN_USER_SUCCESS = \"login_user_success\"\r\n\r\nexport const LOGOUT_USER_PENDING = \"logout_user_pending\"; \r\nexport const LOGOUT_USER_FAILED = \"logout_user_failed\"; \r\nexport const LOGOUT_USER_SUCCESS = \"logout_user_success\"; ","\r\n\r\nclass ErrorHandler {\r\n    FAILED_TO_FETCH = \"failed to fetch\";\r\n\r\n    AN_ERROR_OCCURRED = \"An Error Occurred\";\r\n    POOR_INTERNET_CONNECTION = \"Poor Internet Connection\";\r\n    UNAUTHENTICATED_USER = \"You have to Login\";\r\n    USER_NOT_FOUND = \"User not found\";\r\n\r\n    checkErrorBool = (err) => err && err.message !== null;\r\n\r\n    getErrorRemark(err) {\r\n        err = this.normalizeError(err);\r\n        switch (err.message) {\r\n            case this.FAILED_TO_FETCH:\r\n                return this.POOR_INTERNET_CONNECTION;\r\n            case this.UNAUTHENTICATED_USER:\r\n            case this.USER_NOT_FOUND:\r\n            case this.POOR_INTERNET_CONNECTION:\r\n                return err.message\r\n            default:\r\n                return this.AN_ERROR_OCCURRED;\r\n        }\r\n    }\r\n\r\n    async getResponseError(response) {\r\n        if (!response) {\r\n            return new Error(this.AN_ERROR_OCCURRED);\r\n        }\r\n        switch (response.status) {\r\n            case 401:\r\n                return new Error(this.UNAUTHENTICATED_USER);\r\n            case 404:\r\n                return new Error(this.USER_NOT_FOUND);\r\n            default: \r\n            return new Error(this.AN_ERROR_OCCURRED);\r\n        }\r\n    }\r\n\r\n    normalizeError(err) {\r\n        if (!this.checkErrorBool(err)) {\r\n            return new Error(this.AN_ERROR_OCCURRED);\r\n        }\r\n        err.message = err.message.toLowerCase();\r\n        return err;\r\n    }\r\n\r\n}\r\n\r\nexport default new ErrorHandler();","import { loginPending, loginFailed, loginSuccess, logoutSuccess, logoutPending, logoutFailed } from \"../services/user/actions\";\r\nimport AuthHelper from \"./AuthHelper\";\r\nimport ErrorHandler from \"./ErrorHandler\";\r\n\r\nclass ChatHttpServer {\r\n    // BASE_URL = \"http://localhost:4001/mychatapp/v1/api\";\r\n    BASE_URL = \"https://my-chat-app-server-0707.herokuapp.com/mychatapp/v1/api/\";\r\n    REQUEST_OPTIONS = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    getUserRequest = (userId, token) => fetch(`${this.BASE_URL}/user/${userId}`, { ...this.REQUEST_OPTIONS, method: 'GET', headers: { 'Content-Type': 'application/json', 'authorization': `Bearer ${token}` }})\r\n    loginRequest = (data) => fetch(`${this.BASE_URL}/user/login`, { ...this.REQUEST_OPTIONS, method: 'POST', body: JSON.stringify(data)})\r\n    signupRequest = (data) => fetch(`${this.BASE_URL}/user/signup`, { ...this.REQUEST_OPTIONS, method: 'POST', body: JSON.stringify(data)})\r\n    checkTokenRequest = (userId, token) => fetch(`${this.BASE_URL}/user/refresh/${userId}`, { ...this.REQUEST_OPTIONS, headers: { 'Content-Type': 'application/json', 'authorization': `Bearer ${token}` } }, );\r\n    getMessageRequest = (userId, toUserId, { page, limit }, token) => fetch(`${this.BASE_URL}/message?page=${page}&limit=${limit}`, { ...this.REQUEST_OPTIONS, method: 'POST', body: JSON.stringify({ userId, toUserId }), headers: { 'Content-Type': 'application/json', 'authorization': `Bearer ${token}` } }, );\r\n    \r\n    loginUser = (data) => (\r\n        async (dispatch) => {\r\n            try {\r\n                dispatch(loginPending());\r\n                const response = await this.loginRequest(data);\r\n                if (response.ok) {\r\n                    const userData = await response.json();\r\n                    if (userData.token) {\r\n                        return dispatch(loginSuccess(userData));\r\n                    }\r\n                } else {\r\n                    throw ErrorHandler.getResponseError(response);\r\n                }\r\n            } catch(err) {\r\n                const error = await err;\r\n                return dispatch(loginFailed({ error: ErrorHandler.getErrorRemark(error) }))\r\n            }\r\n        }\r\n    )\r\n    \r\n    signupUser = (data) => (\r\n        async (dispatch) => {\r\n            try {\r\n                dispatch(loginPending());\r\n                const response = await this.signupRequest(data);\r\n                if (response.ok) {\r\n                    const userData = await response.json();\r\n                    if (userData.token) {\r\n                        return dispatch(loginSuccess(userData));\r\n                    }\r\n                } else {\r\n                    throw ErrorHandler.getResponseError(response);\r\n                }\r\n            } catch(err) {\r\n                const error = await err;\r\n                return dispatch(loginFailed({ error: ErrorHandler.getErrorRemark(error) }))\r\n            }\r\n        }\r\n    )\r\n\r\n    logoutUser = () => (\r\n        async (dispatch) => {\r\n            try {\r\n                dispatch(logoutPending());\r\n                await AuthHelper.unauthenticate();\r\n                return dispatch(logoutSuccess())\r\n            } catch(err) {\r\n                return await dispatch(logoutFailed({ error: err.message }));\r\n            }\r\n        }\r\n    )\r\n\r\n    checkToken = (userId, token) => (\r\n        async (dispatch) => {\r\n            try {\r\n                dispatch(loginPending());\r\n                const response = await this.checkTokenRequest(userId, token);\r\n                if (response.ok) {\r\n                    const userData = await response.json();\r\n                    if (userData.token) {\r\n                        return dispatch(loginSuccess(userData));\r\n                    }\r\n                } else {\r\n                    throw ErrorHandler.getResponseError(response);\r\n                }\r\n            } catch(err) {\r\n                let error = await err;\r\n                console.log(error)\r\n                console.log(error.message)\r\n                if (error.message === ErrorHandler.UNAUTHENTICATED_USER)\r\n                    return dispatch(this.logoutUser());\r\n                return dispatch(loginFailed({ error: ErrorHandler.POOR_INTERNET_CONNECTION }))\r\n            }\r\n        }\r\n    )\r\n\r\n    getUserDetails = (userId, token) => (\r\n        new Promise(async (resolve, reject) => {\r\n            try {\r\n                const response = await this.getUserRequest(userId, token);\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    if (data.status === \"success\") {\r\n                        resolve(data.user)\r\n                    } else {\r\n                        throw new Error(\"Could not get details\")\r\n                    }\r\n                } else {\r\n                    throw new Error(\"Could not get details\")\r\n                }\r\n            } catch (error) {\r\n                reject(error)\r\n            }\r\n        })\r\n    )\r\n\r\n    getMessages = (userId, toUserId, { page, limit }, token) => (\r\n        new Promise(async (resolve, reject) => {\r\n            try {\r\n                const response = await this.getMessageRequest(userId, toUserId, { page, limit }, token);\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    if (data.status === \"success\") {\r\n                        resolve(data)\r\n                    } else {\r\n                        throw new Error(\"Could not load chats\")\r\n                    }\r\n                } else {\r\n                    throw new Error(\"Could not load chats\")\r\n                }\r\n            } catch (error) {\r\n                reject({ error })\r\n            }\r\n        })\r\n    )\r\n}\r\n\r\nexport default new ChatHttpServer();\r\n","import React from 'react';\r\n\r\nexport function usePromise(promiseOrFunction, defaultValue) {\r\n    const [state, setState] = React.useState({ value: defaultValue, error: null, isPending: true })\r\n  \r\n    React.useEffect(() => {\r\n      const promise = (typeof promiseOrFunction === 'function')\r\n        ? promiseOrFunction()\r\n        : promiseOrFunction\r\n  \r\n      let isSubscribed = true\r\n      promise\r\n        .then(value => isSubscribed ? setState({ value, error: null, isPending: false }) : null)\r\n        .catch(error => isSubscribed ? setState({ value: defaultValue, error: error, isPending: false }) : null)\r\n  \r\n      return () => (isSubscribed = false)\r\n    }, [promiseOrFunction, defaultValue])\r\n  \r\n    const { value, error, isPending } = state\r\n    return [value, error, isPending]\r\n}\r\n\r\nexport default usePromise;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <span className=\"spinner\">\r\n            {/* <span></span>\r\n            <span></span>\r\n            <span></span> */}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ChatSocketServer from '../../helpers/ChatSocketServer';\r\nimport { search, times, users } from '../../res/icon';\r\nimport { AuthProfile } from '../user/AuthProfile';\r\nimport './chatlist.css';\r\n\r\n\r\nconst ChatListItem = ({ user, isSelected, setSelectedUser, isTyping=false }) => (\r\n    <li\r\n        className={` chatlist--item ${isSelected ? 'active' : ''}`} \r\n        onClick={setSelectedUser}>\r\n        <div className={`chat-image ${user.online === 'Y' ? 'online' : '' }`}>\r\n            { user.imageUrl ? <img src={user.imageUrl} alt=\"profile\" /> : <></> }\r\n            <div className=\"online-trk\"></div>\r\n        </div>\r\n        <div className=\"chat-person\">\r\n            <span className={`chat-person--name`}>{ user.username }</span>\r\n            { isTyping ? <small className=\"chat-person--typing\">typing</small> : <></> }\r\n        </div>\r\n    </li>\r\n);\r\n\r\nclass ChatList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // for the chat\r\n            selectedUserId: null,\r\n            chatListUsers: null,\r\n            // typing: {},\r\n\r\n            searchTerm: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatSocketServer.getChatList(this.props.userId);\r\n        ChatSocketServer.eventEmitter.on('chat-list-response', this.renderChatList)\r\n\r\n        // ChatSocketServer.receiveTypingMessage();\r\n        // ChatSocketServer.eventEmitter.on('typing-message-response', this.addTypingUser)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatSocketServer.eventEmitter.removeListener('chat-list-response', this.renderChatList);\r\n    }\r\n\r\n    updateSelectedUser(user) {\r\n        this.setState({ selectedUserId: user._id });\r\n        this.props.updateSelectedUser(user)\r\n    }\r\n\r\n    /* addTypingUser = ({ userId }) => {\r\n        if (this.state.typing[userId]) {\r\n            window.clearTimeout(this.state.typing[userId])\r\n        }\r\n        const newTyping = this.state.typing;\r\n        newTyping[userId] = window.setTimeout(() => this.typingTimeout(userId), 3000);\r\n        this.setState({ typing: newTyping })\r\n    } */\r\n\r\n    /* typingTimeout(userId) {\r\n        if (this.state.typing[userId]) {\r\n            window.clearTimeout(this.state.typing[userId])\r\n            const newTyping = this.state.typing;\r\n            newTyping[userId] = null;\r\n            this.setState({ typing: newTyping })\r\n        }\r\n    } */\r\n\r\n    searchKey = (e) => {\r\n        this.setState({ searchTerm: e.target.value })\r\n    }\r\n\r\n    renderChatList = (chatListResponse) => {\r\n        if (chatListResponse.error) {\r\n            console.log(\"chatlist\", chatListResponse.error)\r\n        } else {\r\n            let chatListUsers = this.state.chatListUsers;\r\n            if (chatListResponse.singleUser) {\r\n                if (chatListUsers) { // to prevent error\r\n                    if (chatListUsers.length > 0) {\r\n                        chatListUsers = chatListUsers.filter((user) => user._id !== chatListResponse.chatList._id);\r\n                    }\r\n                    /* Adding new online user into chat list array */\r\n                    chatListUsers = [...[ chatListResponse.chatList ], ...chatListUsers];\r\n                }\r\n            } else if (chatListResponse.userDisconnected) {\r\n                const loggedOutUser = chatListUsers.findIndex((obj) => obj._id === chatListResponse.userId);\r\n                if (loggedOutUser >= 0) {\r\n                    chatListUsers[loggedOutUser].online = 'N';\r\n                }\r\n            } else {\r\n                /* Updating entire chat list if user logs in. */\r\n                chatListUsers = chatListResponse.chatList;\r\n            }\r\n            this.setState({\r\n                chatListUsers: chatListUsers\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isMobileViewPort, toggleValue } = this.props;\r\n        return (\r\n            <aside ref={this.props.sidebarRef} className={`chat-list ${isMobileViewPort ? `float ${!toggleValue ? 'hide' : ''}` : ''}`}>\r\n                { this.state.chatListUsers ? (\r\n                    <>\r\n                    <div className=\"aside-top\">\r\n                        { this.state.chatListUsers.length > 0 ? (\r\n                            <>\r\n                                <div className=\"search-pane\">\r\n                                { this.state.searchTerm.trim().length > 0 ? <span className=\"close-search\" onClick={() => this.setState({ searchTerm: '' })}><div>{ times }</div></span> : <span>{ search }</span> }\r\n                                    <input type=\"text\" placeholder=\"Find a chat here\" onChange={this.searchKey} value={this.state.searchTerm} />\r\n                                </div>\r\n                                <span className=\"group-btn\">\r\n                                    { users }\r\n                                </span>\r\n                            </>\r\n                        ) : <></> }\r\n                        {/* { isMobileViewPort ? <span onClick={switchToggle}>{ times }</span> : <></> } */}\r\n                    </div>\r\n                    <ul>\r\n                    {\r\n                        (this.state.chatListUsers.filter((user) => {\r\n                            return user.username.toLowerCase().includes(this.state.searchTerm.trim().toLowerCase())\r\n                        })).map((user, index) => (\r\n                            <ChatListItem \r\n                                key={`chat-user${index}`}\r\n                                isTyping={this.props.typing[user._id]}\r\n                                isSelected={this.state.selectedUserId === user._id}\r\n                                user={user}\r\n                                setSelectedUser={() => this.updateSelectedUser(user)}></ChatListItem>\r\n                        ))\r\n                    }\r\n                    </ul>\r\n                    <div className=\"aside-bottom\">\r\n                        {/* <AuthProfile /> */}\r\n                    </div>\r\n                    </>\r\n                    ) : <></>\r\n                }\r\n                <div className={`alert \r\n                    ${this.state.loading ? 'alert-info' : ''} \r\n                    ${this.state.chatListUsers && this.state.chatListUsers.length > 0 ? 'visibility-hidden' : ''}`\r\n                }>\r\n                    { this.state.chatListUsers ? this.state.chatListUsers.length === 0 ? 'No User Available to chat.' : 'Error loading your chat! We will keep trying' : 'Loading your chat list.'}\r\n                </div>\r\n            </aside>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { userId, token } = state.auth;\r\n    return { userId, token }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatList);","import React from 'react';\r\nimport Spinner from './Spinner';\r\nimport './spinner.css';\r\n\r\nconst SpinnerFullPage = () => {\r\n    return (\r\n        <div className=\"spinner-page\">\r\n            <Spinner></Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpinnerFullPage;","import React, { Component } from 'react';\r\nimport PropsType from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport './scrollcontainer.css';\r\n\r\nclass ScrollContainer extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.scrollBoxRef = null;\r\n        this.contentBoxRef = null;\r\n        this.loadingRef = React.createRef();\r\n        this.state = {\r\n            paddingTop: \"30px\",\r\n            loading: false,\r\n            loadingOffset: -100,\r\n            boxHeight: 0\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        onScrollBoxMount: PropsType.func,\r\n        onScrollPageRequest: PropsType.func,\r\n        onScrollPageResponse: PropsType.func\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onScrollBoxMount(this.scrollBoxRef, this.contentBoxRef);\r\n        this.setState({ boxHeight: this.contentBoxRef.getBoundingClientRect().height })\r\n\r\n        this.addScrollEvent();\r\n    }\r\n\r\n    handleObserver() {\r\n\r\n    }\r\n\r\n    addScrollEvent = () => {\r\n        this.scrollBoxRef.addEventListener(\"scroll\", _.throttle(this.handleScrolling), false);\r\n        document.addEventListener(\"DOMContentLoaded\", this.handleScrolling, false);\r\n    } \r\n\r\n    handleScrolling = async (e) => {\r\n        if (parseInt(this.props.page) > 1 && this.scrollBoxRef.scrollTop <= 30) {\r\n            const offsetPercent = (30 - this.scrollBoxRef.scrollTop) / 30 * 100;\r\n            this.setState({ loadingOffset: offsetPercent - 100 })\r\n        } else {\r\n            this.setState({ loadingOffset: -100 })\r\n        }\r\n\r\n        if (!this.state.loading) {\r\n            if (this.scrollBoxRef.scrollTop <= 0) {\r\n                try {\r\n                    this.setState({ loading: true })\r\n                    await this.props.onScrollPageRequest();\r\n                } catch (error) {\r\n                    console.warn(error);\r\n                } finally {\r\n                    this.setState({ loading: false })\r\n                    this.setState((prevState) => {\r\n                        const currentHeight = this.contentBoxRef.getBoundingClientRect().height;\r\n                        this.scrollBoxRef.scrollTo(0, currentHeight - prevState.boxHeight)\r\n                        return ({ boxHeight: currentHeight });\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={(el) => this.scrollBoxRef = el} className={`scrollBox ${this.props.className}`} style={{ paddingTop: this.state.paddingTop }}>\r\n                <div ref={this.loadingRef} className=\"scrollBox--loader\" style={{ height: this.state.paddingTop, top: this.state.loading ? 0 : `${this.state.loadingOffset}%` }}>Loading</div>\r\n                <div ref={(el) => this.contentBoxRef = el} className={`scrollBox--content ${this.props.contentClassName}`}>\r\n                    { this.props.children }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ScrollContainer;","\r\n\r\nvar throttle = function throttle(fn, delay) {\r\n    var lastCall = 0;\r\n    return function () {\r\n      var now = new Date().getTime();\r\n      if (now - lastCall < delay) {\r\n        return;\r\n      }\r\n      lastCall = now;\r\n      return fn.apply(undefined, arguments);\r\n    };\r\n};\r\n\r\nvar validateUrl = function(asset) {\r\n    if (!asset) throw new Error(\"Invalid resource\")\r\n    return asset;\r\n}\r\n\r\nfunction SoundHelper({ asset, throttle=1000, volume=.5 }) {\r\n    this.asset = validateUrl(asset);\r\n    this.volume = volume;\r\n    this.play = () => {\r\n        const audioElement = new Audio(this.asset);\r\n        audioElement.play().then().catch(console.log)\r\n    }\r\n}\r\n\r\nexport default SoundHelper;","import React from 'react';\r\nimport { emoji, plane } from '../../res/icon';\r\nimport \"./chatroom.css\";\r\nimport { connect } from 'react-redux';\r\nimport ChatHttpServer from '../../helpers/ChatHttpServer';\r\nimport ChatSocketServer from '../../helpers/ChatSocketServer';\r\nimport noUserSelected from '../../res/choiceSelect.svg';\r\nimport startConversation from '../../res/startConversation.svg';\r\nimport SpinnerFullPage from '../../components/spinner';\r\nimport ReactEmoji from 'react-emoji';\r\nimport ScrollContainer from '../../components/scroll-comp/ScrollContainer';\r\nimport { datesAreOnSameDay } from '../../helpers/dateHelper';\r\n\r\nimport soundFile from '../../res/sound/doneforyou.mp3';\r\nimport SoundHelper from '../../helpers/SoundHelper';\r\n\r\nclass ChatRoom extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.messagesBox = null;\r\n        this.messageContentBox = null;\r\n        this.notifySound = new SoundHelper({ asset: soundFile })\r\n        this.state = {\r\n            messageLoading: true,\r\n            messages: [],\r\n            selectedUser: null,\r\n            //\r\n            page: null,\r\n            limit: 10,\r\n            totalPages: null\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (prevState.selectedUser === null || prevState.selectedUser._id !== nextProps.selectedUser._id) {\r\n            return {\r\n                selectedUser: nextProps.selectedUser,\r\n                messageLoading: true,\r\n                page: null,\r\n                messages: []\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.selectedUser === null || (this.props.selectedUser._id !== prevProps.selectedUser._id)) {\r\n          this.getMessages();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatSocketServer.receiveMessage();\r\n        ChatSocketServer.eventEmitter.on('add-message-response', this.receiveSocketMessages);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatSocketServer.eventEmitter.removeListener('add-message-response', this.receiveSocketMessages);\r\n    }\r\n\r\n    receiveSocketMessages = (socketResponse) => {\r\n        const { selectedUser } = this.state;\r\n        if (selectedUser !== null && selectedUser._id === socketResponse.fromUserId) {\r\n            this.setState({ messages: [ ...this.state.messages, socketResponse ] });\r\n            this.scrollMessageContainer();\r\n            this.notifySound.play()\r\n        }\r\n    }\r\n\r\n    getMessages = async () => {\r\n        try {\r\n            const { userId, selectedUser, token} = this.props;\r\n            const result = await ChatHttpServer.getMessages(userId, selectedUser._id, { page: this.state.page, limit: this.state.limit }, token);\r\n            if (!result.error) {\r\n                this.setState({ \r\n                    messages: result.messages,\r\n                    page: result.currentPage,\r\n                    totalPages: result.totalPages\r\n                });\r\n                this.scrollMessageContainer();\r\n            } else {\r\n                alert(\"Unable to fetch messages\")\r\n            }\r\n            this.setState({ messageLoading: false });\r\n        } catch (err) {\r\n            this.setState({ messageLoading: false });\r\n        }\r\n    }\r\n\r\n    sendMessage = (e) => {\r\n        const { userId, selectedUser } = this.props;\r\n        if (e.key === 'Enter') {\r\n            const message = e.target.value;\r\n            if (message === '' || message === undefined || message === null) {\r\n                alert(\"message can't be empty\")\r\n            } else if (userId === '') {\r\n                \r\n            } else if (!selectedUser || selectedUser === undefined) {\r\n\r\n            } else {\r\n                this.sendAndUpdateMessages({\r\n                    fromUserId: userId,\r\n                    text: (message).trim(),\r\n                    toUserId: selectedUser._id,\r\n                });\r\n                e.target.value = '';\r\n            }\r\n        } else {\r\n            ChatSocketServer.typingMessage(selectedUser._id);\r\n        }\r\n    }\r\n\r\n    sendAndUpdateMessages(message) {\r\n        try {\r\n            ChatSocketServer.sendMessage(message);\r\n            this.setState({\r\n                messages : [...this.state.messages, message]\r\n            });\r\n            this.scrollMessageContainer();\r\n        } catch (error) {\r\n            console.error(\"error\")\r\n            alert(`Can't send your message`);\r\n        }\r\n    }\r\n\r\n    scrollMessageContainer() {\r\n        if (this.messagesBox !== null) {\r\n          try {\r\n            setTimeout(() => {\r\n                this.messagesBox.scrollTo(0, this.messageContentBox.scrollHeight);\r\n            }, 100);\r\n          } catch (error) {\r\n            console.warn(error);\r\n          }\r\n        }\r\n    }\r\n\r\n    onScrollBoxMount = (scrollBox, contextBox) => {\r\n        this.messagesBox = scrollBox;\r\n        this.messageContentBox = contextBox;\r\n        this.scrollMessageContainer();\r\n    }\r\n\r\n    handleScrollPageRequest = async () => {\r\n        if (parseInt(this.state.page) > 1) {\r\n            try {\r\n                const { userId, selectedUser, token} = this.props;\r\n                const result = await ChatHttpServer.getMessages(userId, selectedUser._id, { page: this.state.page - 1, limit: this.state.limit }, token);\r\n                if (!result.error) {\r\n                    this.setState({ \r\n                        messages: [...result.messages, ...this.state.messages],\r\n                        page: result.currentPage,\r\n                        totalPages: result.totalPages\r\n                    });\r\n                    // this.scrollMessageContainer();\r\n                } else {\r\n                    alert(\"Unable to fetch messages\")\r\n                }\r\n            } catch (err) {\r\n                console.error(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    handleScrollPageResult = (data) => {\r\n        console.log(data);\r\n    }\r\n\r\n    renderMessages = () => {\r\n        if (this.state.messages.length === 0) return [];\r\n        let dayInConcern = new Date(this.state.messages[0].date);\r\n        const messageUI = this.state.messages.map((message, index) => {\r\n            const day = new Date(message.date);\r\n            const isNewDay = !datesAreOnSameDay(day, dayInConcern) && (day.getTime() > dayInConcern.getTime());\r\n            if (isNewDay) dayInConcern = day;\r\n            return (\r\n                <React.Fragment key={`chat-msg-${index}`}>\r\n                    { \r\n                        isNewDay ? (\r\n                            <div className=\"chat-date-bk\">\r\n                                <div></div>\r\n                                <span>{ dayInConcern.toDateString() }</span>\r\n                                <div></div>\r\n                            </div>\r\n                        ) : <></> \r\n                    }\r\n                    <ChatBox key={`chat-bx-${index}`} isAuth={message.fromUserId === this.props.userId} message={message} />\r\n                </ React.Fragment>\r\n            )\r\n        })\r\n        return messageUI;\r\n    }\r\n\r\n    renderChatUI = () => {\r\n        return (\r\n            <main className=\"chat-room\" role=\"main\">\r\n                { this.state.page === 0 ? this.renderStartChatUI() : <></> }\r\n                <ScrollContainer \r\n                    scrollBoxRef={this.messagesBox}\r\n                    onScrollPageRequest={this.handleScrollPageRequest}\r\n                    onScrollPageResponse={this.handleScrollPageResult}\r\n                    onScrollBoxMount={this.onScrollBoxMount} \r\n                    className=\"chat-bx\" \r\n                    contentClassName=\"content-bx\">\r\n                    <>\r\n                    {\r\n                        parseInt(this.state.page) <= 1 || this.state.page === null ? (\r\n                            this.renderStartChatUI()\r\n                        ) : <></>\r\n                    }\r\n                    {\r\n                        this.renderMessages()\r\n                    }\r\n                    </>\r\n                </ScrollContainer>\r\n                <div className=\"bottom-bar\">\r\n                    <span>{ emoji }</span>\r\n                    <input placeholder={`Send a message`} onKeyPress={this.sendMessage} />\r\n                    <span>{ plane }</span>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    renderNoUserSelectedUI = () => {\r\n        return (\r\n            <div className=\"no-chat-select-bx\">\r\n                <img src={ noUserSelected } alt=\"No Selected User\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderStartChatUI = () => {\r\n        return (\r\n            <div className=\"chat-start-bx\">\r\n                <img src={ startConversation } alt=\"Start Conversation\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { selectedUser } = this.state;\r\n        if (selectedUser) {\r\n            if (this.state.messageLoading) {\r\n                return <SpinnerFullPage />\r\n            }\r\n            return this.renderChatUI();\r\n        } else {\r\n            return this.renderNoUserSelectedUI();\r\n        }\r\n    }\r\n}\r\n\r\nconst ChatBox = ({ message, isAuth }) => {\r\n    return (\r\n        <div className={`chat-row ${message.username === \"admin\" ? \"admin\" : isAuth ? \"auth\" : \"\"}`}>\r\n            { \r\n                message.username !== \"admin\" && !isAuth ? <div className=\"chat-auth\">{ message.username }</div> : \"\"\r\n            }\r\n            <div className=\"chat-item\">\r\n                { ReactEmoji.emojify(message.text) }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({ userId: state.auth.userId, token: state.auth.token })\r\n)(ChatRoom);","\r\n\r\nexport const datesAreOnSameDay = (d1, d2) => (\r\n    d1.getFullYear() === d2.getFullYear() &&\r\n    d1.getMonth() === d2.getMonth() &&\r\n    d1.getDate() === d2.getDate()\r\n)","import React from 'react';\r\nimport './error.css';\r\n\r\nconst ErrorFullPage = ({ err, onAction }) => {\r\n    return (\r\n        <div className=\"error-fullpage\" onClick={onAction ? onAction : null}>\r\n            <div className=\"error\">{ err }</div>\r\n            <small>Click to refresh</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorFullPage;","import React from 'react';\r\nimport ChatList from '../components/chatlist/ChatList';\r\nimport noUserSelected from '../res/choiceSelect.svg';\r\nimport '../styles/home.css';\r\nimport ChatRoom from './chat/ChatRoom';\r\nimport ChatSocketServer from '../helpers/ChatSocketServer';\r\nimport { connect } from 'react-redux';\r\nimport { bars } from '../res/icon';\r\nimport logo from '../res/logo.svg';\r\nimport ErrorFullPage from '../components/error';\r\nimport SpinnerFullPage from '../components/spinner';\r\nimport ChatHttpServer from '../helpers/ChatHttpServer';\r\nimport AuthHelper from '../helpers/AuthHelper';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.sidebarElem = React.createRef();\r\n        this.state = {\r\n            isMobileViewPort: false,\r\n            toggleValue: false,\r\n            // chat\r\n            isLoading: true,\r\n            selectedUser: null,\r\n            error: null,\r\n            // typing\r\n            typing: {}\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // responsiveness\r\n        this.handleViewPortResize();\r\n        window.addEventListener('DOMContentLoaded onLoad', this.handleViewPortResize);\r\n        window.addEventListener('resize', this.handleViewPortResize);\r\n\r\n        this.createSocketConnection();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('DOMContentLoaded', this.handleViewPortResize);\r\n        window.removeEventListener('resize', this.handleViewPortResize);\r\n        window.removeEventListener('click', this.handleCloseSidebar)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.userId === null || prevProps.userId !== this.props.userId) {\r\n            this.createSocketConnection();\r\n        }\r\n    }\r\n\r\n    createSocketConnection = () => {\r\n        const { userId } = this.props;\r\n        if (userId) {\r\n            try {\r\n                ChatSocketServer.createSocketConnection(userId);\r\n                this.setState({ isLoading: false })\r\n\r\n                ChatSocketServer.receiveTypingMessage();\r\n                ChatSocketServer.eventEmitter.on('typing-message-response', this.addTypingUser)\r\n            } catch(err) {\r\n                this.setState({ isLoading: false, error: err.message })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleViewPortResize = () => {\r\n        if (window.innerWidth > 1200) {\r\n            this.setState({ isMobileViewPort: false })\r\n            window.removeEventListener('click', this.handleCloseSidebar)\r\n        } else {\r\n            this.setState({ isMobileViewPort: true, toggleValue: true })\r\n            window.addEventListener('click', this.handleCloseSidebar)\r\n        }\r\n    }\r\n\r\n    switchToggleValue = () => {\r\n        const newValue = !this.state.toggleValue;\r\n        this.setState({ toggleValue: newValue });\r\n        if (newValue) {\r\n            window.setTimeout(\r\n                () => window.addEventListener('click', this.handleCloseSidebar),\r\n                500\r\n            )\r\n        } else {\r\n            window.removeEventListener('click', this.handleCloseSidebar)\r\n        }\r\n    }\r\n\r\n    handleCloseSidebar = (e) => {\r\n        if (this.sidebarElem && this.sidebarElem.current) {\r\n            if (!this.sidebarElem.current.contains(e.target) && this.state.toggleValue) {\r\n                this.switchToggleValue();\r\n            }\r\n            window.removeEventListener('click', this.handleCloseSidebar)\r\n        }\r\n    }\r\n\r\n    updateSelectedUser = (user) => {\r\n        this.setState({ selectedUser: user });\r\n        this.switchToggleValue();\r\n    }\r\n\r\n    addTypingUser = ({ userId }) => {\r\n        if (this.state.typing[userId]) {\r\n            window.clearTimeout(this.state.typing[userId])\r\n        }\r\n        const newTyping = this.state.typing;\r\n        newTyping[userId] = window.setTimeout(() => this.typingTimeout(userId), 3000);\r\n        this.setState({ typing: newTyping })\r\n    }\r\n\r\n    typingTimeout(userId) {\r\n        if (this.state.typing[userId]) {\r\n            window.clearTimeout(this.state.typing[userId])\r\n            const newTyping = this.state.typing;\r\n            newTyping[userId] = null;\r\n            this.setState({ typing: newTyping })\r\n        }\r\n    }\r\n\r\n    renderNoUserSelectedUI = () => {\r\n        return (\r\n            <div className=\"no-chat-select-bx\">\r\n                <img src={ noUserSelected } alt=\"\" />\r\n                <h4>Select a Chat</h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.error || this.state.error) {\r\n            const { userId, token } = AuthHelper.getAuthValue();\r\n            const errorAction = {\r\n                onAction: () => this.props.error ? (\r\n                        this.props.checkUserToken(userId, token)\r\n                    ) : ( this.createSocketConnection() )\r\n            }\r\n            return <ErrorFullPage err={this.props.error} { ...errorAction }  />\r\n        }\r\n        if (this.state.isLoading || this.props.isLoading) {\r\n            return <div style={{ height: \"100vh\" }}><SpinnerFullPage></SpinnerFullPage></div>\r\n        }\r\n        const responsiveKit = {\r\n            isMobileViewPort: this.state.isMobileViewPort,\r\n            toggleValue: this.state.toggleValue,\r\n            switchToggle: this.switchToggleValue\r\n        }\r\n        return (\r\n            <main className=\"home-page\">\r\n                <ChatList sidebarRef={this.sidebarElem} typing={this.state.typing} updateSelectedUser={this.updateSelectedUser} { ...responsiveKit }></ChatList>\r\n                <div className=\"chat-pane\">\r\n                    <div className=\"top-bar\">\r\n                        { responsiveKit.isMobileViewPort ? <span className=\"toggle-bar\" onClick={responsiveKit.switchToggle}>{ bars }</span> : <></> }\r\n                        <div>\r\n                            <span>{ this.state.selectedUser ? this.state.selectedUser.username : <span className=\"logo-kit\"><img src={logo} alt=\"logo\" /><span>YouChat</span></span> }</span>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.state.selectedUser ? (\r\n                            <ChatRoom selectedUser={this.state.selectedUser} typing={this.state.typing} { ...responsiveKit } ></ChatRoom>\r\n                        ) : (\r\n                            this.renderNoUserSelectedUI()\r\n                        )\r\n                    }\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    ({ auth }) => ({ userId: auth.userId, token: auth.token, error: auth.error, isLoading: auth.isLoading }),\r\n    (dispatch) => ({ checkUserToken: (userId, token) => dispatch(ChatHttpServer.checkToken(userId, token)) })\r\n)(Home);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './join.css';\r\n\r\nconst Join = () => {\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ room, setRoom ] = useState(\"\");\r\n    const [ joined, setJoined ] = useState(false);\r\n\r\n    const joinRoom = (e) => {\r\n        e.preventDefault();\r\n        if (room.trim().length > 0 && name.trim().length > 0) {\r\n            setJoined(true)\r\n        }\r\n    }\r\n\r\n    if (joined) {\r\n        return <Redirect to={`/chat?name=${name}&room=${room}`} />\r\n    }\r\n\r\n    return (\r\n        <div id=\"join-bx\">\r\n            <form onSubmit={joinRoom}>\r\n                <h2>Join A Server <span role=\"img\" aria-label=\"rocket\">🚀</span></h2>\r\n                <input placeholder=\"Your Name\" type=\"name\" onChange={(e) => setName(e.target.value)} />\r\n                <input placeholder=\"Room Name\" type=\"room\" onChange={(e) => setRoom(e.target.value)} />\r\n                <div>\r\n                    <button type=\"submit\" disabled={!(room.trim().length > 0 && name.trim().length > 0)}>Join</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Join;","import React, { Component } from 'react';\r\nconst { Consumer, Provider } = React.createContext();\r\n\r\nclass ThemeContextProvider extends Component {\r\n\r\n    USER_THEME_PREFERENCE = 'USER_THEME_PREFERENCE';\r\n    state = {\r\n        theme: 'night'\r\n    };\r\n\r\n    static getDerivedStateFromProps = () => {\r\n        const theme = window.localStorage.getItem(this.USER_THEME_PREFERENCE);\r\n        if (theme) {\r\n            return { theme }\r\n        }\r\n\r\n        window.localStorage.setItem(this.USER_THEME_PREFERENCE, 'night');\r\n        return null;\r\n    }\r\n    \r\n    toggleTheme = () => {\r\n        this.setState(prevState => {\r\n            const theme = prevState.theme === 'day' ? 'night' : 'day';\r\n            window.localStorage.setItem(this.USER_THEME_PREFERENCE, theme);\r\n            return { theme }\r\n        })\r\n    }\r\n    render() {\r\n        return <Provider value={this.state.theme}>{ this.props.children }</Provider>\r\n    }\r\n}\r\n\r\nconst ThemeContext = { Provider: ThemeContextProvider , Consumer }\r\n\r\nexport default ThemeContext;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport ThemeContext from '../../contexts/themeContext';\r\nimport AuthHelper from '../../helpers/AuthHelper';\r\nimport ChatHttpServer from '../../helpers/ChatHttpServer';\r\nimport \"../../styles/form.css\";\r\nimport logo from \"../../res/logo.svg\";\r\n\r\nconst Login = (props) => {\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { error, isLoading, token, userId } = useSelector(state => state.auth);\r\n\r\n    const login = (e) => {\r\n        e.preventDefault()\r\n        dispatch(ChatHttpServer.loginUser({ username: name, password }))\r\n    }\r\n    \r\n    const { from } = props.location.state || { from: {pathname: '/'} }\r\n    if (token) {\r\n        AuthHelper.authenticate(userId, token, () => <Redirect to={from.pathname} />)\r\n        return <Redirect to={from.pathname} />\r\n    }\r\n    return (\r\n        <ThemeContext.Consumer>\r\n        {\r\n            theme => (\r\n                <main className={`${theme} form-page`}>\r\n                    <form onSubmit={login}>\r\n                        <h2> <img src={logo} alt=\"logo\" />   YouChat </h2>\r\n                        <h3>{ props.location.state ? \"Yeah! You have to login\" : \"Welcome Back!\" } <span role=\"img\" aria-label=\"cool\">😎</span></h3>\r\n                        <input placeholder=\"Your Username\" value={name} type=\"name\" onChange={(e) => setName(e.target.value)} />\r\n                        <input placeholder=\"Password\" value={password} type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                        { error ? <div className=\"error\">{ error }</div> : '' }\r\n                        <div>\r\n                            <button type=\"submit\" disabled={!(password.trim().length > 0 && name.trim().length > 0)}>\r\n                                Login\r\n                                { isLoading ? <Spinner /> : '' }\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"redirect\">You don't have an account?<Link to=\"/signup\">Sign Up</Link></div>\r\n                    </form>\r\n                </main>\r\n            )\r\n        }\r\n        </ThemeContext.Consumer>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport AuthHelper from '../../helpers/AuthHelper';\r\nimport ChatHttpServer from '../../helpers/ChatHttpServer';\r\nimport \"../../styles/form.css\";\r\nimport logo from \"../../res/logo.svg\";\r\nimport ThemeContext from '../../contexts/themeContext';\r\n\r\nconst Signup = (props) => {\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { error, userId, isLoading, token } = useSelector(state => state.auth);\r\n\r\n    const signup = (e) => {\r\n        e.preventDefault()\r\n        dispatch(ChatHttpServer.signupUser({ username: name, email, password }))\r\n    }\r\n\r\n    const { from } = props.location.state || { from: {pathname: '/'} }\r\n    if (token) {\r\n        AuthHelper.authenticate(userId, token, () => <Redirect to={from.pathname} />)\r\n        return <Redirect to={from.pathname} />\r\n    }\r\n    return (\r\n        <ThemeContext.Consumer>\r\n        {\r\n            theme => (\r\n                <main className={`${theme} form-page`}>\r\n                    <form onSubmit={signup}>\r\n                        <h2> <img src={logo} alt=\"logo\" />   YouChat </h2>\r\n                        <h3> Join and Start a Conversation <span role=\"img\" aria-label=\"rocket\">🚀</span></h3>\r\n                        <input placeholder=\"Your Username\" value={name} type=\"name\" onChange={(e) => setName(e.target.value)} />\r\n                        <input placeholder=\"Your Email\" value={email} type=\"email\" onChange={(e) => setEmail(e.target.value)} />\r\n                        <input placeholder=\"Password\" value={password} type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                        <div className=\"error\">{ error ? error : '' }</div>\r\n                        <div>\r\n                            <button type=\"submit\" disabled={!(password.trim().length > 0 && name.trim().length > 0)}>\r\n                                Create\r\n                                { isLoading ? <Spinner /> : '' }\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"redirect\"><Link to=\"/login\">Login</Link>, If you have an account</div>\r\n                    </form>\r\n                </main>\r\n            )\r\n        }\r\n        </ThemeContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport './notfound.css';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"notfound-top\">\r\n                <span onClick={() => window.history.back()}>Go Back</span>\r\n            </div>\r\n            <main className=\"notfound-bx\">\r\n                <span>4</span>\r\n                <span>0</span>\r\n                <span>4</span>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Switch, Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\r\nimport {  } from 'react'\r\nimport './App.css';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport Home from './pages/Home';\r\nimport Join from './pages/join/Join';\r\nimport Login from './pages/signuser/Login';\r\nimport Signup from './pages/signuser/Signup';\r\nimport NotFound from './pages/notfound/NotFound';\r\nimport AuthHelper from './helpers/AuthHelper';\r\nimport ChatHttpServer from './helpers/ChatHttpServer';\r\nimport { connect } from 'react-redux';\r\nimport ThemeContext from './contexts/themeContext';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    // window.localStorage.clear()\r\n    if (AuthHelper.isAuthenticated()) {\r\n      const { userId, token } = AuthHelper.getAuthValue();\r\n      this.props.checkUserToken(userId, token)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n      {\r\n        theme => (\r\n          <div className={`app-body ${theme}`}>\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n              <Route path=\"/\" exact><Redirect to=\"/chat\" /></Route>\r\n              <PrivateRoute path=\"/chat\" component={Home}  />\r\n              <Route path=\"/join\" component={Join}  />\r\n              <PublicRoute path=\"/login\" component={Login} />\r\n              <PublicRoute path=\"/signup\" component={Signup} />\r\n              <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n          </Router>\r\n          </div>\r\n        )\r\n      }\r\n      </ThemeContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ userId: state.auth.userId, token: state.auth.token }),\r\n  (dispatch) => ({ checkUserToken: (userId, token) => dispatch(ChatHttpServer.checkToken(userId, token)) })\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN_USER_FAILED, LOGIN_USER_PENDING, LOGIN_USER_SUCCESS, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILED, LOGOUT_USER_PENDING } from \"./actionTypes\";\r\n\r\n\r\nconst defaultState = {\r\n    token: null,\r\n    error: null,\r\n    userId: null,\r\n    isLoading: false\r\n};\r\nexport const userReducer = (state=defaultState, { type, payload }) => {\r\n    switch(type) {\r\n        case LOGIN_USER_PENDING:\r\n            return { ...state, isLoading: true, error: null }\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, token: payload.token, isLoading: false, userId: payload.userId, error: null }\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, token: null, isLoading: false, userId: null, error: payload.error }\r\n        case LOGOUT_USER_PENDING:\r\n            return { ...state, isLoading: true, error: null }\r\n        case LOGOUT_USER_SUCCESS:\r\n            return { ...state, token: null, isLoading: false, userId: null, error: null }\r\n        case LOGOUT_USER_FAILED:\r\n            return { ...state, token: null, isLoading: false, userId: null, error: payload.error }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { userReducer } from './user/reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducer = combineReducers({\r\n    auth: userReducer\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './services/store';\nimport ThemeContext from './contexts/themeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeContext.Provider value={'day'}>\n        <App />\n      </ThemeContext.Provider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.e60f0d19.svg\";","module.exports = __webpack_public_path__ + \"static/media/choiceSelect.4b22275f.svg\";","module.exports = __webpack_public_path__ + \"static/media/startConversation.d2c64057.svg\";","module.exports = __webpack_public_path__ + \"static/media/doneforyou.8a8b917c.mp3\";"],"sourceRoot":""}