{"version":3,"sources":["services/user/actionTypes.js","helpers/AuthHelper.js","helpers/themeHelper.js","contexts/themeContext.js","services/user/actions.js","helpers/ErrorHandler.js","helpers/ChatHttpServer.js","components/spinner/Spinner.js","res/logo.svg","components/spinner/index.js","components/PrivateRoute.js","components/PublicRoute.js","pages/main/Main.js","pages/join/Join.js","pages/signuser/Login.js","pages/signuser/Signup.js","pages/notfound/NotFound.js","App.js","serviceWorker.js","services/user/reducer.js","services/store.js","index.js"],"names":["LOGIN_USER_FAILED","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGOUT_USER_PENDING","LOGOUT_USER_FAILED","LOGOUT_USER_SUCCESS","USER_TOKEN_KEY","USER_ID_KEY","getAuthValue","token","window","localStorage","getItem","userId","isAuthenticated","Boolean","authenticate","callback","setItem","unauthenticate","clear","denotiveColor","errorColor","warningColor","dayColor","backgroundColor","contrastColor","contrastColorMid","contrastColorFade","contrastColorFall","textColor","textContrastColor","nightColor","MyThemeContext","React","createContext","ThemeContextProvider","USER_THEME_PREFERENCE","state","theme","toggleTheme","setState","prevState","console","log","Provider","value","this","primaryColor","secondaryColor","props","children","Component","getDerivedStateFromProps","ThemeContext","Consumer","loginPending","type","loginSuccess","payload","loginFailed","FAILED_TO_FETCH","AN_ERROR_OCCURRED","POOR_INTERNET_CONNECTION","UNAUTHENTICATED_USER","USER_NOT_FOUND","checkErrorBool","err","message","normalizeError","response","Error","status","toLowerCase","BASE_URL","REQUEST_OPTIONS","method","mode","headers","getUserRequest","fetch","loginRequest","data","body","JSON","stringify","signupRequest","checkTokenRequest","getMessageRequest","toUserId","page","limit","loginUser","dispatch","a","ok","json","userData","ErrorHandler","getResponseError","error","getErrorRemark","signupUser","logoutUser","AuthHelper","checkToken","getUserDetails","Promise","resolve","reject","user","getMessages","Spinner","className","module","exports","SpinnerFullPage","PrivateRoute","component","rest","render","to","pathname","from","location","PublicRoute","Home","lazy","Main","path","fallback","exact","withRouter","Join","useState","name","setName","room","setRoom","joined","setJoined","id","onSubmit","e","preventDefault","trim","length","role","aria-label","placeholder","onChange","target","disabled","Login","password","setPassword","useDispatch","useSelector","auth","isLoading","login","ChatHttpServer","username","style","background","color","src","logo","alt","Signup","email","setEmail","signup","NotFound","onClick","history","back","App","checkUserToken","basename","process","connect","hostname","match","defaultState","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f31bbcb3.chunk.js","sourcesContent":["\r\n\r\nexport const LOGIN_USER_FAILED = \"login_user_failed\"\r\nexport const LOGIN_USER_PENDING = \"login_user_pending\"\r\nexport const LOGIN_USER_SUCCESS = \"login_user_success\"\r\n\r\nexport const LOGOUT_USER_PENDING = \"logout_user_pending\"; \r\nexport const LOGOUT_USER_FAILED = \"logout_user_failed\"; \r\nexport const LOGOUT_USER_SUCCESS = \"logout_user_success\"; ","\r\nclass AuthHelper {\r\n    USER_TOKEN_KEY = \"user_token_key\";\r\n    USER_ID_KEY = \"user_id_key\";\r\n    \r\n    getAuthValue = () => ({\r\n        token: window.localStorage.getItem(this.USER_TOKEN_KEY),\r\n        userId: window.localStorage.getItem(this.USER_ID_KEY)\r\n    });\r\n    isAuthenticated = () => Boolean(window.localStorage.getItem(this.USER_TOKEN_KEY));\r\n    authenticate = (userId, token, callback) => {\r\n        window.localStorage.setItem(this.USER_TOKEN_KEY, token)\r\n        window.localStorage.setItem(this.USER_ID_KEY, userId)\r\n        if (callback && typeof callback === \"function\")\r\n            return callback()\r\n    };\r\n    unauthenticate = (callback) => {\r\n        window.localStorage.clear();\r\n        if (callback && typeof callback === \"function\")\r\n            callback()\r\n    };\r\n}\r\n\r\nexport default new AuthHelper();","\r\n\r\nexport const denotiveColor = {\r\n    errorColor: \"var(--base-red)\",\r\n    warningColor: \"var(--base-orange)\"\r\n}\r\n\r\nexport const dayColor = {\r\n    backgroundColor: \"var(--light-background)\",\r\n    contrastColor: \"var(--light-contrast-neutral)\",\r\n    contrastColorMid: \"var(--base-light-contrast-mid)\",\r\n    contrastColorFade: \"var(--base-light-contrast-fade)\",\r\n    contrastColorFall: \"var(--base-light-contrast-fall)\",\r\n    textColor: \"var(--text-black)\",\r\n    textContrastColor: \"var(--text-black-contrast)\"\r\n}\r\n\r\nexport const nightColor = {\r\n    backgroundColor: \"var(--dark-background)\",\r\n    contrastColor: \"var(--dark-contrast-neutral)\",\r\n    contrastColorMid: \"var(--base-dark-contrast-mid)\",\r\n    contrastColorFade: \"var(--base-dark-contrast-fade)\",\r\n    contrastColorFall: \"var(--base-dark-contrast-fall)\",\r\n    textColor: \"var(--text-white)\",\r\n    textContrastColor: \"var(--text-white-contrast)\"\r\n}\r\n\r\nexport const themeMap = (state) => ({\r\n    primaryColor: \"var(--base-color)\",\r\n    secondaryColor: \"var(--base-color-dark)\",\r\n    ...denotiveColor,\r\n    ...( state === 'day' ? { ...dayColor } : { ...nightColor } )\r\n})","import React, { Component } from 'react';\r\nimport { themeMap } from '../helpers/themeHelper';\r\nconst MyThemeContext = React.createContext();\r\n\r\nclass ThemeContextProvider extends Component {\r\n\r\n    USER_THEME_PREFERENCE = 'USER_THEME_PREFERENCE';\r\n    state = {\r\n        theme: 'night'\r\n    };\r\n\r\n    static getDerivedStateFromProps = () => {\r\n        const theme = window.localStorage.getItem(this.USER_THEME_PREFERENCE);\r\n        if (theme) {\r\n            return { theme }\r\n        }\r\n\r\n        window.localStorage.setItem(this.USER_THEME_PREFERENCE, 'night');\r\n        return null;\r\n    }\r\n    \r\n    toggleTheme = () => {\r\n        this.setState(prevState => {\r\n            const theme = prevState.theme === 'day' ? 'night' : 'day';\r\n            window.localStorage.setItem(this.USER_THEME_PREFERENCE, theme);\r\n            console.log(\"toggle \" + prevState.theme + \" \", theme);\r\n            return { theme: 'day' }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <MyThemeContext.Provider value={{\r\n            theme: themeMap(this.state.theme),\r\n            state: this.state.theme,\r\n            toggleTheme: this.toggleTheme\r\n        }}>{ this.props.children }</MyThemeContext.Provider>\r\n    }\r\n}\r\n\r\nconst ThemeContext = { Provider: ThemeContextProvider , Consumer: MyThemeContext.Consumer, MyThemeContext }\r\n\r\nexport default ThemeContext;","import { LOGIN_USER_FAILED, LOGIN_USER_PENDING, LOGIN_USER_SUCCESS, LOGOUT_USER_PENDING, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILED } from \"./actionTypes\"\r\n\r\n\r\nexport const loginPending = () => ({ type: LOGIN_USER_PENDING });\r\nexport const loginSuccess = (payload) => ({ type: LOGIN_USER_SUCCESS, payload });\r\nexport const loginFailed = (payload) => ({ type: LOGIN_USER_FAILED, payload });\r\n\r\nexport const logoutPending = () => ({ type: LOGOUT_USER_PENDING });\r\nexport const logoutSuccess = () => ({ type: LOGOUT_USER_SUCCESS });\r\nexport const logoutFailed = (payload) => ({ type: LOGOUT_USER_FAILED, payload });","\r\n\r\nclass ErrorHandler {\r\n    FAILED_TO_FETCH = \"failed to fetch\";\r\n\r\n    AN_ERROR_OCCURRED = \"an error occurred\";\r\n    POOR_INTERNET_CONNECTION = \"poor internet connection\";\r\n    UNAUTHENTICATED_USER = \"you have to login\";\r\n    USER_NOT_FOUND = \"user not found\";\r\n\r\n    checkErrorBool = (err) => err && err.message !== null;\r\n\r\n    getErrorRemark(err) {\r\n        err = this.normalizeError(err);\r\n        console.log(err.message)\r\n        switch (err.message) {\r\n            case this.FAILED_TO_FETCH:\r\n                return this.POOR_INTERNET_CONNECTION;\r\n            case this.UNAUTHENTICATED_USER:\r\n            case this.USER_NOT_FOUND:\r\n            case this.POOR_INTERNET_CONNECTION:\r\n                return err.message\r\n            default:\r\n                return this.AN_ERROR_OCCURRED;\r\n        }\r\n    }\r\n\r\n    async getResponseError(response) {\r\n        if (!response) {\r\n            return new Error(this.AN_ERROR_OCCURRED);\r\n        }\r\n        switch (response.status) {\r\n            case 401:\r\n                return new Error(this.UNAUTHENTICATED_USER);\r\n            case 404:\r\n                return new Error(this.USER_NOT_FOUND);\r\n            default: \r\n            return new Error(this.AN_ERROR_OCCURRED);\r\n        }\r\n    }\r\n\r\n    normalizeError(err) {\r\n        if (!this.checkErrorBool(err)) {\r\n            return new Error(this.AN_ERROR_OCCURRED);\r\n        }\r\n        err.message = err.message.toLowerCase();\r\n        return err;\r\n    }\r\n\r\n}\r\n\r\nexport default new ErrorHandler();","import { loginPending, loginFailed, loginSuccess, logoutSuccess, logoutPending, logoutFailed } from \"../services/user/actions\";\r\nimport AuthHelper from \"./AuthHelper\";\r\nimport ErrorHandler from \"./ErrorHandler\";\r\n\r\nclass ChatHttpServer {\r\n    // BASE_URL = \"http://localhost:4001/mychatapp/v1/api\";\r\n    BASE_URL = \"https://my-chat-app-server-0707.herokuapp.com/mychatapp/v1/api\";\r\n    REQUEST_OPTIONS = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    getUserRequest = (userId, token) => fetch(`${this.BASE_URL}/user/${userId}`, { ...this.REQUEST_OPTIONS, method: 'GET', headers: { 'Content-Type': 'application/json', 'authorization': `Bearer ${token}` }})\r\n    loginRequest = (data) => fetch(`${this.BASE_URL}/user/login`, { ...this.REQUEST_OPTIONS, method: 'POST', body: JSON.stringify(data)})\r\n    signupRequest = (data) => fetch(`${this.BASE_URL}/user/signup`, { ...this.REQUEST_OPTIONS, method: 'POST', body: JSON.stringify(data)})\r\n    checkTokenRequest = (userId, token) => fetch(`${this.BASE_URL}/user/refresh/${userId}`, { ...this.REQUEST_OPTIONS, headers: { 'Content-Type': 'application/json', 'authorization': `Bearer ${token}` } }, );\r\n    getMessageRequest = (userId, toUserId, { page, limit }, token) => fetch(`${this.BASE_URL}/message?page=${page}&limit=${limit}`, { ...this.REQUEST_OPTIONS, method: 'POST', body: JSON.stringify({ userId, toUserId }), headers: { 'Content-Type': 'application/json', 'authorization': `Bearer ${token}` } }, );\r\n    \r\n    loginUser = (data) => (\r\n        async (dispatch) => {\r\n            try {\r\n                dispatch(loginPending());\r\n                const response = await this.loginRequest(data);\r\n                if (response.ok) {\r\n                    const userData = await response.json();\r\n                    if (userData.token) {\r\n                        return dispatch(loginSuccess(userData));\r\n                    }\r\n                } else {\r\n                    throw ErrorHandler.getResponseError(response);\r\n                }\r\n            } catch(err) {\r\n                const error = await err;\r\n                return dispatch(loginFailed({ error: ErrorHandler.getErrorRemark(error) }))\r\n            }\r\n        }\r\n    )\r\n    \r\n    signupUser = (data) => (\r\n        async (dispatch) => {\r\n            try {\r\n                dispatch(loginPending());\r\n                const response = await this.signupRequest(data);\r\n                if (response.ok) {\r\n                    const userData = await response.json();\r\n                    if (userData.token) {\r\n                        return dispatch(loginSuccess(userData));\r\n                    }\r\n                } else {\r\n                    throw ErrorHandler.getResponseError(response);\r\n                }\r\n            } catch(err) {\r\n                const error = await err;\r\n                return dispatch(loginFailed({ error: ErrorHandler.getErrorRemark(error) }))\r\n            }\r\n        }\r\n    )\r\n\r\n    logoutUser = () => (\r\n        async (dispatch) => {\r\n            try {\r\n                dispatch(logoutPending());\r\n                await AuthHelper.unauthenticate();\r\n                return dispatch(logoutSuccess())\r\n            } catch(err) {\r\n                return await dispatch(logoutFailed({ error: err.message }));\r\n            }\r\n        }\r\n    )\r\n\r\n    checkToken = (userId, token) => (\r\n        async (dispatch) => {\r\n            try {\r\n                dispatch(loginPending());\r\n                const response = await this.checkTokenRequest(userId, token);\r\n                if (response.ok) {\r\n                    const userData = await response.json();\r\n                    if (userData.token) {\r\n                        return dispatch(loginSuccess(userData));\r\n                    }\r\n                } else {\r\n                    throw ErrorHandler.getResponseError(response);\r\n                }\r\n            } catch(err) {\r\n                let error = await err;\r\n                console.log(error)\r\n                console.log(error.message)\r\n                if (error.message === ErrorHandler.UNAUTHENTICATED_USER)\r\n                    return dispatch(this.logoutUser());\r\n                return dispatch(loginFailed({ error: ErrorHandler.POOR_INTERNET_CONNECTION }))\r\n            }\r\n        }\r\n    )\r\n\r\n    getUserDetails = (userId, token) => (\r\n        new Promise(async (resolve, reject) => {\r\n            try {\r\n                const response = await this.getUserRequest(userId, token);\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    if (data.status === \"success\") {\r\n                        resolve(data.user)\r\n                    } else {\r\n                        throw new Error(\"Could not get details\")\r\n                    }\r\n                } else {\r\n                    throw new Error(\"Could not get details\")\r\n                }\r\n            } catch (error) {\r\n                reject(error)\r\n            }\r\n        })\r\n    )\r\n\r\n    getMessages = (userId, toUserId, { page, limit }, token) => (\r\n        new Promise(async (resolve, reject) => {\r\n            try {\r\n                const response = await this.getMessageRequest(userId, toUserId, { page, limit }, token);\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    if (data.status === \"success\") {\r\n                        resolve(data)\r\n                    } else {\r\n                        throw new Error(\"Could not load chats\")\r\n                    }\r\n                } else {\r\n                    throw new Error(\"Could not load chats\")\r\n                }\r\n            } catch (error) {\r\n                reject({ error })\r\n            }\r\n        })\r\n    )\r\n}\r\n\r\nexport default new ChatHttpServer();\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <span className=\"spinner\">\r\n            {/* <span></span>\r\n            <span></span>\r\n            <span></span> */}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Spinner;","module.exports = __webpack_public_path__ + \"static/media/logo.e60f0d19.svg\";","import React from 'react';\r\nimport Spinner from './Spinner';\r\nimport './spinner.css';\r\n\r\nconst SpinnerFullPage = () => {\r\n    return (\r\n        <div className=\"spinner-page\">\r\n            <Spinner></Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpinnerFullPage;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport AuthHelper from '../helpers/AuthHelper';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => AuthHelper.isAuthenticated() === true \r\n                ? <Component { ...props }/> \r\n                : <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} /> }\r\n         />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'; \r\nimport AuthHelper from '../helpers/AuthHelper';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => AuthHelper.isAuthenticated() === false \r\n                ? <Component { ...props } /> \r\n                : <Redirect to=\"/chat\" /> }\r\n         />\r\n    )\r\n}\r\n\r\nexport default PublicRoute;","import React, { lazy, Suspense } from 'react';\r\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport SpinnerFullPage from '../../components/spinner';\r\n\r\nimport './main.css';\r\n\r\nconst Home = lazy(() => import(\"../home/Home\"));\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        const { pathname: path } = this.props.location;\r\n        return (\r\n            <div className=\"main-in\">\r\n                <div className=\"container\">\r\n                    <Suspense fallback={<SpinnerFullPage />}>\r\n                        <Switch>\r\n                            <Route path=\"/in\" exact> <Redirect to={`${path}/chat`} /> </Route>\r\n                            <Route path=\"/in/chat\" exact component={Home} />\r\n                        </Switch> \r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Main);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './join.css';\r\n\r\nconst Join = () => {\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ room, setRoom ] = useState(\"\");\r\n    const [ joined, setJoined ] = useState(false);\r\n\r\n    const joinRoom = (e) => {\r\n        e.preventDefault();\r\n        if (room.trim().length > 0 && name.trim().length > 0) {\r\n            setJoined(true)\r\n        }\r\n    }\r\n\r\n    if (joined) {\r\n        return <Redirect to={`/chat?name=${name}&room=${room}`} />\r\n    }\r\n\r\n    return (\r\n        <div id=\"join-bx\">\r\n            <form onSubmit={joinRoom}>\r\n                <h2>Join A Server <span role=\"img\" aria-label=\"rocket\">🚀</span></h2>\r\n                <input placeholder=\"Your Name\" type=\"name\" onChange={(e) => setName(e.target.value)} />\r\n                <input placeholder=\"Room Name\" type=\"room\" onChange={(e) => setRoom(e.target.value)} />\r\n                <div>\r\n                    <button type=\"submit\" disabled={!(room.trim().length > 0 && name.trim().length > 0)}>Join</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Join;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport ThemeContext from '../../contexts/themeContext';\r\nimport AuthHelper from '../../helpers/AuthHelper';\r\nimport ChatHttpServer from '../../helpers/ChatHttpServer';\r\nimport \"./form.css\";\r\nimport logo from \"../../res/logo.svg\";\r\n\r\nconst Login = (props) => {\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { error, isLoading, token, userId } = useSelector(state => state.auth);\r\n\r\n    const login = (e) => {\r\n        e.preventDefault()\r\n        dispatch(ChatHttpServer.loginUser({ username: name, password }))\r\n    }\r\n    \r\n    const { from } = props.location.state || { from: {pathname: '/'} }\r\n    if (token) {\r\n        AuthHelper.authenticate(userId, token, () => <Redirect to={from.pathname} />)\r\n        return <Redirect to={from.pathname} />\r\n    }\r\n    return (\r\n        <ThemeContext.Consumer>\r\n        {\r\n            ({ theme }) => (\r\n                <main className={`form-page`} style={{ background: theme.backgroundColor, color: theme.textColor }}>\r\n                    <form onSubmit={login}>\r\n                        <h2> <img src={logo} alt=\"logo\" /> YouChat </h2>\r\n                        <h3>{ props.location.state ? \"Yeah! You have to login\" : \"Welcome Back!\" } <span role=\"img\" aria-label=\"cool\">😎</span></h3>\r\n                        <input placeholder=\"Your Username\" value={name} type=\"name\" onChange={(e) => setName(e.target.value)} style={{ color: theme.textColor }} />\r\n                        <input placeholder=\"Password\" value={password} type=\"password\" onChange={(e) => setPassword(e.target.value)} style={{ color: theme.textColor }} />\r\n                        { error ? <div className=\"error\">{ error }</div> : '' }\r\n                        <div>\r\n                            <button type=\"submit\" disabled={!(password.trim().length > 0 && name.trim().length > 0)}>\r\n                                Login\r\n                                { isLoading ? <Spinner /> : '' }\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"redirect\">You don't have an account?<Link to=\"/signup\">Sign Up</Link></div>\r\n                    </form>\r\n                </main>\r\n            )\r\n        }\r\n        </ThemeContext.Consumer>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport AuthHelper from '../../helpers/AuthHelper';\r\nimport ChatHttpServer from '../../helpers/ChatHttpServer';\r\nimport \"./form.css\";\r\nimport logo from \"../../res/logo.svg\";\r\nimport ThemeContext from '../../contexts/themeContext';\r\n\r\nconst Signup = (props) => {\r\n    const [ name, setName ] = useState(\"\");\r\n    const [ email, setEmail ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { error, userId, isLoading, token } = useSelector(state => state.auth);\r\n\r\n    const signup = (e) => {\r\n        e.preventDefault()\r\n        dispatch(ChatHttpServer.signupUser({ username: name, email, password }))\r\n    }\r\n\r\n    const { from } = props.location.state || { from: {pathname: '/'} }\r\n    if (token) {\r\n        AuthHelper.authenticate(userId, token, () => <Redirect to={from.pathname} />)\r\n        return <Redirect to={from.pathname} />\r\n    }\r\n    return (\r\n        <ThemeContext.Consumer>\r\n        {\r\n            theme => (\r\n                <main className={`${theme} form-page`}>\r\n                    <form onSubmit={signup}>\r\n                        <h2> <img src={logo} alt=\"logo\" />   YouChat </h2>\r\n                        <h3> Join and Start a Conversation <span role=\"img\" aria-label=\"rocket\">🚀</span></h3>\r\n                        <input placeholder=\"Your Username\" value={name} type=\"name\" onChange={(e) => setName(e.target.value)} />\r\n                        <input placeholder=\"Your Email\" value={email} type=\"email\" onChange={(e) => setEmail(e.target.value)} />\r\n                        <input placeholder=\"Password\" value={password} type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                        <div className=\"error\">{ error ? error : '' }</div>\r\n                        <div>\r\n                            <button type=\"submit\" disabled={!(password.trim().length > 0 && name.trim().length > 0)}>\r\n                                Create\r\n                                { isLoading ? <Spinner /> : '' }\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"redirect\"><Link to=\"/login\">Login</Link>, If you have an account</div>\r\n                    </form>\r\n                </main>\r\n            )\r\n        }\r\n        </ThemeContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport './notfound.css';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"notfound-top\">\r\n                <span onClick={() => window.history.back()}>Go Back</span>\r\n            </div>\r\n            <main className=\"notfound-bx\">\r\n                <span>4</span>\r\n                <span>0</span>\r\n                <span>4</span>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Switch, Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\r\nimport {  } from 'react'\r\nimport './App.css';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport Main from './pages/main/Main';\r\nimport Join from './pages/join/Join';\r\nimport Login from './pages/signuser/Login';\r\nimport Signup from './pages/signuser/Signup';\r\nimport NotFound from './pages/notfound/NotFound';\r\nimport AuthHelper from './helpers/AuthHelper';\r\nimport ChatHttpServer from './helpers/ChatHttpServer';\r\nimport { connect } from 'react-redux';\r\nimport ThemeContext from './contexts/themeContext';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    // window.localStorage.clear()\r\n    if (AuthHelper.isAuthenticated()) {\r\n      const { userId, token } = AuthHelper.getAuthValue();\r\n      this.props.checkUserToken(userId, token)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n      {\r\n        ({ theme }) => (\r\n          <div className={`app-body`} style={{ background: theme.backgroundColor, color: theme.textColor }}>\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n              <Route path=\"/\" exact><Redirect to=\"/in\"/></Route>\r\n              <PrivateRoute path=\"/in\" component={Main}  />\r\n              <Route path=\"/join\" component={Join}  />\r\n              <PublicRoute path=\"/login\" component={Login} />\r\n              <PublicRoute path=\"/signup\" component={Signup} />\r\n              <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n          </Router>\r\n          </div>\r\n        )\r\n      }\r\n      </ThemeContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ userId: state.auth.userId, token: state.auth.token }),\r\n  (dispatch) => ({ checkUserToken: (userId, token) => dispatch(ChatHttpServer.checkToken(userId, token)) })\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN_USER_FAILED, LOGIN_USER_PENDING, LOGIN_USER_SUCCESS, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILED, LOGOUT_USER_PENDING } from \"./actionTypes\";\r\n\r\n\r\nconst defaultState = {\r\n    token: null,\r\n    error: null,\r\n    userId: null,\r\n    isLoading: false\r\n};\r\nexport const userReducer = (state=defaultState, { type, payload }) => {\r\n    switch(type) {\r\n        case LOGIN_USER_PENDING:\r\n            return { ...state, isLoading: true, error: null }\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, token: payload.token, isLoading: false, userId: payload.userId, error: null }\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, token: null, isLoading: false, userId: null, error: payload.error }\r\n        case LOGOUT_USER_PENDING:\r\n            return { ...state, isLoading: true, error: null }\r\n        case LOGOUT_USER_SUCCESS:\r\n            return { ...state, token: null, isLoading: false, userId: null, error: null }\r\n        case LOGOUT_USER_FAILED:\r\n            return { ...state, token: null, isLoading: false, userId: null, error: payload.error }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { userReducer } from './user/reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst reducer = combineReducers({\r\n    auth: userReducer\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './services/store';\nimport ThemeContext from './contexts/themeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeContext.Provider value={'day'}>\n        <App />\n      </ThemeContext.Provider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}